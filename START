
import React, { useState } from 'react';
import { PlayerMode } from './types';
import Header from './components/Header';
import PlayerControls from './components/PlayerControls';
import VideoPlayer from './components/VideoPlayer';
import AudioPlayer from './components/AudioPlayer';
import WhatsAppIcon from './components/icons/WhatsAppIcon';
import NowPlaying from './components/NowPlaying';
import NewsTicker from './components/NewsTicker';
import InstagramIcon from './components/icons/InstagramIcon';
import FacebookIcon from './components/icons/FacebookIcon';
import TwitterIcon from './components/icons/TwitterIcon';
import { NotificationProvider } from './context/NotificationContext';
import Notification from './components/Notification';
import TikTokIcon from './components/icons/TikTokIcon';
import KwaiIcon from './components/icons/KwaiIcon';

const App: React.FC = () => {
  const [playerMode, setPlayerMode] = useState<PlayerMode>(PlayerMode.AUDIO);
  const baseButtonClasses = "flex items-center justify-center space-x-2 px-6 py-3 rounded-full text-sm font-semibold transition-all duration-300 ease-in-out transform hover:scale-105 shadow-lg focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-900";


  return (
    <NotificationProvider>
      <div className="flex flex-col min-h-screen text-white font-sans">
        <Header />
        <NewsTicker />
        <main className="flex-grow flex flex-col items-center justify-center p-4 space-y-4 md:space-y-6">
          <div className="w-full max-w-3xl bg-black rounded-xl shadow-2xl overflow-hidden aspect-video">
            {playerMode === PlayerMode.VIDEO ? <VideoPlayer /> : <AudioPlayer />}
          </div>
          
          <NowPlaying />

          <div className="flex flex-wrap justify-center items-center gap-4">
              <PlayerControls activeMode={playerMode} setMode={setPlayerMode} />
              <a
                href="https://whatsapp.com/channel/0029Va6IguvCxoAuGyos6330"
                target="_blank"
                rel="noopener noreferrer"
                className={`${baseButtonClasses} bg-green-600 text-white hover:bg-green-700`}
              >
                <WhatsAppIcon className="w-5 h-5" />
                <span>CENTRAL 520</span>
              </a>
              <a
                href="https://www.radio520.com.br"
                target="_blank"
                rel="noopener noreferrer"
                className={`${baseButtonClasses} bg-orange-500 text-white hover:bg-orange-600`}
              >
                <span>RADIO520.COM.BR</span>
              </a>
          </div>
        </main>
        <footer className="text-center p-4 text-gray-400">
          <div className="flex justify-center items-center space-x-6 mb-4">
              <a href="https://instagram.com/radio520" target="_blank" rel="noopener noreferrer" aria-label="Instagram" className="text-gray-400 hover:text-white transition-colors duration-200">
                  <InstagramIcon className="w-6 h-6" />
              </a>
              <a href="https://facebook.com/radio520" target="_blank" rel="noopener noreferrer" aria-label="Facebook" className="text-gray-400 hover:text-white transition-colors duration-200">
                  <FacebookIcon className="w-6 h-6" />
              </a>
              <a href="https://x.com/radio520" target="_blank" rel="noopener noreferrer" aria-label="Twitter X" className="text-gray-400 hover:text-white transition-colors duration-200">
                  <TwitterIcon className="w-6 h-6" />
              </a>
              <a href="https://tiktok.com/@radio520" target="_blank" rel="noopener noreferrer" aria-label="TikTok" className="text-gray-400 hover:text-white transition-colors duration-200">
                  <TikTokIcon className="w-6 h-6" />
              </a>
              <a href="https://www.kwai.com/@radio520" target="_blank" rel="noopener noreferrer" aria-label="Kwai" className="text-gray-400 hover:text-white transition-colors duration-200">
                  <KwaiIcon className="w-6 h-6" />
              </a>
          </div>
          <p className="text-xs text-gray-500">&copy; 2024 Rádio 520. Todos os direitos reservados.</p>
        </footer>
      </div>
      <Notification />
    </NotificationProvider>
  );
};

export default App;

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Rádio 520 Player</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
      body {
        background-color: #0d0218; /* Dark purple fallback */
        background-image: 
          radial-gradient(at 10% 20%, hsla(270, 70%, 25%, 0.4) 0px, transparent 50%),
          radial-gradient(at 85% 30%, hsla(330, 75%, 30%, 0.4) 0px, transparent 50%),
          radial-gradient(at 25% 85%, hsla(210, 70%, 35%, 0.3) 0px, transparent 50%);
        background-attachment: fixed;
      }

      .marquee-container {
        overflow: hidden;
        white-space: nowrap;
        position: relative;
      }

      .marquee-content {
        display: inline-block;
        animation-name: marquee-scroll;
        animation-timing-function: linear;
        animation-iteration-count: infinite;
      }

      @keyframes marquee-scroll {
        from { transform: translateX(0%); }
        to   { transform: translateX(-50%); }
      }
      
      .text-glow {
        text-shadow: 0 0 8px rgba(239, 68, 68, 0.6), 0 0 12px rgba(239, 68, 68, 0.4);
      }
    </style>
  <script type="importmap">
{
  "imports": {
    "react": "https://aistudiocdn.com/react@^19.1.1",
    "react-dom/": "https://aistudiocdn.com/react-dom@^19.1.1/",
    "react/": "https://aistudiocdn.com/react@^19.1.1/"
  }
}
</script>
<link rel="stylesheet" href="/index.css">
</head>
  <body>
    <div id="root"></div>
    <script type="module" src="/index.tsx"></script>
  </body>
</html>

import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';

const rootElement = document.getElementById('root');
if (!rootElement) {
  throw new Error("Could not find root element to mount to");
}

const root = ReactDOM.createRoot(rootElement);
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

{
  "name": "Rádio 520 Player",
  "description": "An interactive web and mobile application to stream live video and audio from Rádio 520. Switch seamlessly between the live video broadcast and the online radio stream.",
  "requestFramePermissions": []
}
{
  "name": "rádio-520-player",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview"
  },
  "dependencies": {
    "react": "^19.1.1",
    "react-dom": "^19.1.1"
  },
  "devDependencies": {
    "@types/node": "^22.14.0",
    "typescript": "~5.8.2",
    "vite": "^6.2.0"
  }
}

<div align="center">
<img width="1200" height="475" alt="GHBanner" src="https://github.com/user-attachments/assets/0aa67016-6eaf-458a-adb2-6e31a0763ed6" />
</div>

# Run and deploy your AI Studio app

This contains everything you need to run your app locally.

View your app in AI Studio: https://ai.studio/apps/drive/1hyLphzZYcx09JU3sbztUliGZcO-B_L54

## Run Locally

**Prerequisites:**  Node.js


1. Install dependencies:
   `npm install`
2. Set the `GEMINI_API_KEY` in [.env.local](.env.local) to your Gemini API key
3. Run the app:
   `npm run dev`

{
  "compilerOptions": {
    "target": "ES2022",
    "experimentalDecorators": true,
    "useDefineForClassFields": false,
    "module": "ESNext",
    "lib": [
      "ES2022",
      "DOM",
      "DOM.Iterable"
    ],
    "skipLibCheck": true,
    "types": [
      "node"
    ],
    "moduleResolution": "bundler",
    "isolatedModules": true,
    "moduleDetection": "force",
    "allowJs": true,
    "jsx": "react-jsx",
    "paths": {
      "@/*": [
        "./*"
      ]
    },
    "allowImportingTsExtensions": true,
    "noEmit": true
  }
}

export enum PlayerMode {
  VIDEO = 'VIDEO',
  AUDIO = 'AUDIO',
}

import path from 'path';
import { defineConfig, loadEnv } from 'vite';

export default defineConfig(({ mode }) => {
    const env = loadEnv(mode, '.', '');
    return {
      define: {
        'process.env.API_KEY': JSON.stringify(env.GEMINI_API_KEY),
        'process.env.GEMINI_API_KEY': JSON.stringify(env.GEMINI_API_KEY)
      },
      resolve: {
        alias: {
          '@': path.resolve(__dirname, '.'),
        }
      }
    };
});
